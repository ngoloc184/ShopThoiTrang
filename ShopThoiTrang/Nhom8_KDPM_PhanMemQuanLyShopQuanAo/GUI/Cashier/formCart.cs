using DevExpress.Utils;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using BLL_DAL;
using System.Windows.Forms;
using AForge.Video;
using AForge.Video.DirectShow;
using ZXing;
using DevExpress.XtraEditors;

namespace GUI.Cashier
{
    public partial class formCart : DevExpress.XtraEditors.XtraUserControl
    {
        FilterInfoCollection filter;
        //VideoCaptureDevice video;
        ChiTietSanPham_BLL ctBLL = new ChiTietSanPham_BLL();
        CTHD_BLLDAL cthdBLL = new CTHD_BLLDAL();
        List<CartItem> dsCT = new List<CartItem>();
        HoaDonBLLDAL hdBLL = new HoaDonBLLDAL();
        MJPEGStream stream;
        //BarcodeResult result;
        public formCart()
        {
            InitializeComponent();
            filter = new FilterInfoCollection(FilterCategory.VideoInputDevice);

            // This line of code is generated by Data Source Configuration Wizard
            //view_DSCTSPsBindingSource.DataSource = new BLL_DAL.QLShopDataContext().View_DSCTSPs;
            dsCT = Program.formTN.chiTietGioHang;
            view_DSCTSPsBindingSource.DataSource = dsCT;
            gridControl_HoaDon.DataSource = view_DSCTSPsBindingSource.DataSource;

        }
        BarcodeReader decode = new BarcodeReader();
        private void Stream_NewFrame(object sender, NewFrameEventArgs eventArgs)
        {
            Bitmap bitmap = (Bitmap)eventArgs.Frame.Clone();
            picHinhAnh.Image = bitmap;
        }
        private void btnQuet_Click(object sender, EventArgs e)
        {
            if (btnQuet.Text.Equals("QUÉT"))
            {
                stream = new MJPEGStream("http://192.168.43.1:4747/video");
                stream.NewFrame += Stream_NewFrame;
                stream.Start();
                btnQuet.Text = "DỪNG";
            }
            else
            {
                stream.Stop();
                btnQuet.Text = "QUÉT";
                picHinhAnh.Image = Image.FromFile(Program.linkURL_Image + "barcode-scanner.png");
            }
            //formQuetMa frm = new formQuetMa();
            //frm.Show();
        }

        private void formCart_VisibleChanged(object sender, EventArgs e)
        {
            if(this.Visible == false)
            {
                Program.formTN.visibleBillCreating(false);
            }
        }

        private void txtMaVach_TextChanged(object sender, EventArgs e)
        {
            //if (_ct != null)
            //{
            //    txtTenSanPham.Invoke(new MethodInvoker(delegate ()
            //    {
            //        txtTenSanPham.Text = _ct.TENSANPHAM;
            //    }));
            //    txtSoLuongTon.Invoke(new MethodInvoker(delegate ()
            //    {
            //        txtSoLuongTon.Text = _ct.SOLUONG + "";
            //    }));
            //    txtDonGia.Invoke(new MethodInvoker(delegate ()
            //    {
            //        txtDonGia.Text = _ct.DONGIA + "";
            //    }));
            //    txtSize.Invoke(new MethodInvoker(delegate ()
            //    {
            //        txtSize.Text = _ct.TENSIZE;
            //    }));
            //    txtMau.Invoke(new MethodInvoker(delegate ()
            //    {
            //        txtMau.Text = _ct.TENMAU;
            //    }));
            //}
        }

        private void gridView_HoaDon_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            if (gridView_HoaDon.GetFocusedRowCellValue("MAVACH") != null)
            {
                pic_HinhAnh.Image = Image.FromFile(Program.linkURL_SanPham + gridView_HoaDon.GetFocusedRowCellValue("HINHANH") + "");
                txtTenSP.Text = (gridView_HoaDon.GetFocusedRowCellValue("TENSANPHAM") + "");
                cboChonSize.DataSource = ctBLL.tim_DSCT(int.Parse(gridView_HoaDon.GetFocusedRowCellValue("MASANPHAM") + ""));
                cboChonSize.DisplayMember = "TENSIZE";
                cboChonSize.ValueMember = "MASIZE";
                cboChonMau.DataSource = ctBLL.tim_DSCT(int.Parse(gridView_HoaDon.GetFocusedRowCellValue("MASANPHAM") + ""));
                cboChonMau.DisplayMember = "TENMAU";
                cboChonMau.ValueMember = "MAMAU";
                txtCTDonGia.Text = (gridView_HoaDon.GetFocusedRowCellValue("DONGIA") + "");
                txtSLM.Text = (gridView_HoaDon.GetFocusedRowCellValue("SOLUONG") + "");
                txtThanhTien.Text = (gridView_HoaDon.GetFocusedRowCellValue("THANHTIEN") + "");
            }
        }

        private void btnDelete_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            if(!(gridView_HoaDon.GetFocusedRowCellValue("MAVACH")+"").Equals("")){
                clear();
                this.view_DSCTSPsBindingSource.RemoveCurrent();
                Program.formTN.chiTietGioHang.Remove(Program.formTN.chiTietGioHang.Find(t=>t.MAVACH == gridView_HoaDon.GetFocusedRowCellValue("MAVACH")+ ""));
                gridView_HoaDon.SetFocusedValue(null);
            }
        }
        private void clear()
        {
            txtTenSP.Text = "";
            cboChonSize.Text = "";
            cboChonSize.DataSource = null;
            cboChonMau.Text = "";
            cboChonMau.DataSource = null;
            txtCTDonGia.Text = "";
            txtSLM.Text = "";
            pic_HinhAnh.Image = null;
            txtThanhTien.Text = "";
        }
        private void btnThayDoi_Click(object sender, EventArgs e)
        {
            try
            {
                CartItem cartItem = new CartItem();
                cartItem.TENMAU = cboChonMau.Text;
                cartItem.TENSIZE = cboChonSize.Text;
                cartItem.SOLUONG = int.Parse(txtSLM.Text);
                dsCT.Find(t => t.MAVACH == gridView_HoaDon.GetFocusedRowCellValue("MAVACH") + "").TENMAU = cartItem.TENMAU;
                dsCT.Find(t => t.MAVACH == gridView_HoaDon.GetFocusedRowCellValue("MAVACH") + "").TENSIZE = cartItem.TENSIZE;
                dsCT.Find(t => t.MAVACH == gridView_HoaDon.GetFocusedRowCellValue("MAVACH") + "").SOLUONG = cartItem.SOLUONG;
                gridView_HoaDon.SetFocusedRowCellValue("TENMAU", cboChonMau.Text);
                gridView_HoaDon.SetFocusedRowCellValue("TENSIZE", cboChonSize.Text);
                gridView_HoaDon.SetFocusedRowCellValue("SOLUONG", txtSLM.Text);
                gridView_HoaDon.SetFocusedRowCellValue("THANHTIEN", txtThanhTien.Text);
            }
            catch
            {

            }
        }

        private void txtSLM_Leave(object sender, EventArgs e)
        {
            try
            {
                if (int.Parse(txtSLM.Text)<1)
                {
                    MessageBox.Show("Vui lòng chọn số lượng mua ít nhất là 1 sản phẩm. ", "Số lượng mua quá ít");
                    txtSLM.Focus();
                    return;
                }
                txtThanhTien.Text = (int.Parse(txtSLM.Text) * int.Parse(txtCTDonGia.Text)) + "";
            }
            catch { 
            }
        }
        public void luuGrp_Cart()
        {
            foreach (Control ctr in this.grpCTHD.Controls)
            {
                this.grpTam_Cart.Controls.Add(ctr);
            }
        }
        bool flag = false;
        public void quayTroLai_Cart()
        {
            if (flag == true)
            {
                flag = false;
                Program.formTN._frmCard.grpCTHD.Controls.Clear();
                foreach (Control ctr in Program.formTN._frmCard.grpTam_Cart.Controls)
                {
                    Program.formTN._frmCard.grpCTHD.Controls.Add(ctr);
                }
            }
        }
        formXacNhanGioHang _formXN = null;
        public GroupControl grpTam_Cart = new GroupControl();
        private void btnThanhToan_Click(object sender, EventArgs e)
        {
            if(Program.formTN.chiTietGioHang == null)
            {
                MessageBox.Show("Giỏ hàng rỗng", "Không thể thanh toán");
                return;
            }
            if (Program.formTN.chiTietGioHang.Count < 1)
            {
                MessageBox.Show("Giỏ hàng rỗng", "Không thể thanh toán");
                return;
            }
            if (btnThanhToan.Text.Equals("TẠO HÓA ĐƠN")){
                grpCTHD.Text = "XÁC NHẬN HÓA ĐƠN";
                btnThanhToan.Text = "THANH TOÁN";
                grpTam_Cart = new GroupControl();
                flag = true;
                luuGrp_Cart();
                this.grpCTHD.Controls.Clear();
                _formXN = new formXacNhanGioHang();
                this.grpCTHD.Controls.Add(_formXN);
                _formXN.Dock = DockStyle.Fill;
            }
            else if(btnThanhToan.Text.Equals("THANH TOÁN"))
            {
                _formXN.taoHoaDon();
                foreach (CartItem item in Program.formTN.chiTietGioHang)
                {
                    CHITIETHOADON ct = new CHITIETHOADON();
                    ct.MACHITIETSP = item.MACHITIETSANPHAM;
                    ct.SOLUONG = item.SOLUONG;
                    ct.DONGIABAN = item.DONGIA;
                    ct.THANHTIEN = item.THANHTIEN;
                    ct.MAHOADON = _formXN.maHoaDon;
                    if (!cthdBLL.ThemCTHD(ct))
                        MessageBox.Show("Thêm chi tiết giỏ hàng thất bại", "Thất bại");
                }
                DialogResult r = MessageBox.Show("Đã tạo hóa đơn thành công ! Bạn có muốn in hóa đơn ?", "IN HÓA ĐƠN",MessageBoxButtons.YesNo,MessageBoxIcon.Question,MessageBoxDefaultButton.Button1);
                if(r == DialogResult.Yes)
                {
                    _formXN = new formXacNhanGioHang();
                    quayTroLai_Cart();
                    Program.formTN.chiTietGioHang = null;
                    Program.formTN.gioHang = null;
                    clear();
                    view_DSCTSPsBindingSource.DataSource = Program.formTN.chiTietGioHang;
                    gridControl_HoaDon.DataSource = view_DSCTSPsBindingSource.DataSource;
                    Program.formTN.visibleBillCreating(false);
                    Program.soLuong = 0;
                    Program.formTN.flagBuy = true;
                    Program.formTN.checkBuy(0);
                    using (Reporting.frmPrint frmPrint = new Reporting.frmPrint())
                    {
                        frmPrint.PrintBillThuNgan(hdBLL.getMaHDMoi().MAHOADON);
                        frmPrint.ShowDialog();
                    }
                }
                else
                {

                }

            }
        }
        View_DSCTSP _ct;
        private void timer1_Tick(object sender, EventArgs e)
        {
            Bitmap img = (Bitmap)picHinhAnh.Image;
            if (img != null)
            {
                ZXing.BarcodeReader Reader = new ZXing.BarcodeReader();
                Result result = Reader.Decode(img);
                if (result == null)
                    return;
                try
                {
                    _ct = ctBLL.loadCTSP(result.ToString());
                    txtMaVach.Text = result.ToString();
                    txtTenSanPham.Text = _ct.TENSANPHAM;
                    txtDonGia.Text = _ct.DONGIA + "";
                    txtSize.Text = _ct.TENSIZE;
                    txtMau.Text = _ct.TENMAU;

                    img.Dispose();
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message + "");
                }
            }
        }

        private void btnHuy_Click(object sender, EventArgs e)
        {
            txtMaVach.Text = "";
            txtTenSanPham.Text = "";
            txtSoLuong.Text = "";
            txtDonGia.Text = "";
            txtSize.Text = "";
            txtMau.Text = "";
        }
        private void capNhatBuy(int num)
        {
            Program.formTN.flagBuy = true;
            Program.formTN.checkBuy(num);
        }
        private void clear1()
        {
            txtMaVach.Text = "";
            txtTenSanPham.Text = "";
            txtSoLuong.Text = "";
            txtDonGia.Text = "";
            txtMau.Text = "";
            txtSize.Text = "";
        }
        private void btnMua_Click(object sender, EventArgs e)
        {
            if (_ct != null)
            {
                if (Program.formTN.chiTietGioHang == null)
                {
                    Program.formTN.chiTietGioHang = new List<CartItem>();
                }
                CartItem ct = new CartItem();
                ct.MASANPHAM = _ct.MASANPHAM;
                ct.MACHITIETSANPHAM = _ct.MACHITIETSP;
                ct.TENSANPHAM = _ct.TENSANPHAM;
                ct.DONGIA = (int)_ct.DONGIA;
                ct.HINHANH = _ct.HINHANH;
                if (int.Parse(txtSoLuong.Text) < 1)
                {
                    MessageBox.Show("Số lượng phải ít nhất là 1", "Không đủ số lượng");
                    return;
                }
                ct.SOLUONG = int.Parse(txtSoLuong.Text);
                ct.TENMAU = _ct.TENMAU;
                ct.TENSIZE = _ct.TENSIZE;
                ct.MAVACH = _ct.MAVACH;
                int num = Program.formTN.chiTietGioHang.FindIndex(_ct => _ct.MACHITIETSANPHAM == ct.MACHITIETSANPHAM);
                if (num != -1)
                {
                    if (Program.formTN.chiTietGioHang[num].SOLUONG + ct.SOLUONG > _ct.KHUYENMAI)
                    {
                        MessageBox.Show("Số lượng mua đã vượt quá số lượng tồn. Không thể mua thêm, cảm ơn.", "Mua quá số lượng tồn");
                        return;
                    }
                    Program.formTN.chiTietGioHang[num].SOLUONG += (int)ct.SOLUONG;
                    capNhatBuy((int)ct.SOLUONG);
                    //Program.formTN.chiTietGioHang[num].thanhTien = ct.DONGIABAN * Program.formTN.chiTietGioHang[num].SOLUONG;
                    MessageBox.Show("Đã tăng mua thêm" + ct.SOLUONG + " " + ct.TENSANPHAM + " size " + ct.TENSIZE + " màu " + ct.TENMAU + " thành công!");
                    clear1();
                }
                else
                {
                    capNhatBuy((int)ct.SOLUONG);
                    Program.formTN.chiTietGioHang.Add(ct);
                    gridControl_HoaDon.DataSource = null;
                    view_DSCTSPsBindingSource.DataSource = Program.formTN.chiTietGioHang;
                    gridControl_HoaDon.DataSource = view_DSCTSPsBindingSource.DataSource;
                    MessageBox.Show("Mua hàng thành công", "Thành công");
                    clear1();
                }
            }
        }
    }
}
